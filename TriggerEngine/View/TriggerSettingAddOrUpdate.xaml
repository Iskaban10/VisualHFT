<Window x:Class="VisualHFT.TriggerEngine.View.TriggerSettingAddOrUpdate"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:VisualHFT.TriggerEngine.View"
        xmlns:enums="clr-namespace:VisualHFT.TriggerEngine"
        mc:Ignorable="d"  
TextElement.FontWeight="Regular"
TextElement.FontSize="15"
TextOptions.TextFormattingMode="Ideal" 
TextOptions.TextRenderingMode="Auto"         
      Background="{DynamicResource MaterialDesignPaper}"  
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
      Title="TriggerSettingsView" Height="450" Width="800">

    <Window.Resources>
        <!-- Enum values provider -->
        <ObjectDataProvider x:Key="ConditionOperatorEnum"
                            MethodName="GetValues"
                            ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="enums:ConditionOperator" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </Window.Resources>
    
    <Grid x:Name="MainGrid">
 
        <StackPanel VerticalAlignment="Stretch">

            <StackPanel>
                <TextBlock Text="Rule Name" Style="{StaticResource MaterialDesignBody2TextBlock}" VerticalAlignment="Center" Margin="0,0,10,0"/>
                <TextBox x:Name="txtTriggerName" Text="{Binding Name}"/>
            </StackPanel>

            
            <TabControl>
                <TabItem Header="Condition">
                    <StackPanel>
                       
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch"> 
                            <Button HorizontalAlignment="Right" x:Name="btnAddNewCondition" Click="btnAddNewCondition_Click" Height="32">➕</Button>
                        </StackPanel>
                        <StackPanel>
                            <DataGrid ItemsSource="{Binding Path=Condition, Mode=TwoWay}"
                        AutoGenerateColumns="False" VerticalAlignment="Top" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch"
                        FontWeight="UltraLight" FontSize="9" FontFamily="Verdana" x:Name="lstData"
                            Style="{DynamicResource MaterialDesignDataGrid}" 
                            SelectionUnit="FullRow" CanUserDeleteRows="False" CanUserAddRows="False" 
                            ClipboardCopyMode="IncludeHeader" HeadersVisibility="Column" AlternationCount="2" IsReadOnly="false" BorderThickness="0" 
                            CanUserReorderColumns="False" CanUserResizeColumns="False" CanUserResizeRows="False" CanUserSortColumns="False" 
                            HorizontalScrollBarVisibility="Hidden" IsHitTestVisible="True" 
                            EnableRowVirtualization="True" 
                            EnableColumnVirtualization="False" 
                            VerticalScrollBarVisibility="Auto" 
                              MaxHeight="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=Grid}}" 
                            Padding="0" >

                                <DataGrid.RowStyle>
                                    <Style TargetType="DataGridRow">

                                        <Setter Property="Padding" Value="0" />
                                        <Setter Property="Margin" Value="0" />
                                        <Style.Triggers>
                                            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                                <Setter Property="Background" Value="Transparent"/>
                                            </Trigger>
                                            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                                <Setter Property="Background" Value="Black"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGrid.RowStyle>
                                <DataGrid.Columns>
                                    <DataGridTemplateColumn  Header="Plugin"  HeaderStyle="{DynamicResource RightAlignedHeader}">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <ComboBox ItemsSource="{Binding PluginNames, RelativeSource={RelativeSource AncestorType=Window}}" DisplayMemberPath="TileName"
                                      SelectedItem="{Binding SelectedPlugin, Mode=TwoWay}"
                                      Width="150" />
                                             
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn Header="Condition"  
                                                 HeaderStyle="{DynamicResource RightAlignedHeader}">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <ComboBox ItemsSource="{Binding Source={StaticResource ConditionOperatorEnum}}" SelectedItem="{Binding Operator}" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTextColumn Header="Value" Binding="{Binding Threshold}"
                                          Width="80" ElementStyle="{DynamicResource RightAligned}" 
                                          HeaderStyle="{DynamicResource RightAlignedHeader}"/>
                                </DataGrid.Columns>
                            </DataGrid>

                        </StackPanel>

                    </StackPanel>
            
           
                </TabItem>
                <TabItem Header="Action">
                    
                    
                    
                </TabItem>
            </TabControl>

        </StackPanel>
        <StackPanel VerticalAlignment="Bottom" Orientation="Horizontal">
            <Button Name="Save" Margin="0,0,10,0" Click="Save_Click">Save</Button>
            <Button Name="Cancel" Margin="0,0,10,0">Cancel</Button>
        </StackPanel>
    </Grid> 
</Window>
